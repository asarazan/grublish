apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

ext.propertyOrEnv = { key -> project.hasProperty(key) ? project.getProperty(key) : System.getenv(key) }

group = project.getProperty('grublish.group')
version = project.getProperty('grublish.version')

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    excludes = ['**/*.kt'] // because kotlin ain't java.
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId project.getProperty('grublish.group')
                artifactId project.getProperty('grublish.artifact')
            }
        }
    }
}

bintray {
    user = propertyOrEnv('grublish.user')
    key = propertyOrEnv('grublish.apikey')
    configurations = ['archives']
    if (project.hasProperty('grublish.publish')) {
        publish = project.getProperty('grublish.publish')
    }
    pkg {
        repo = 'maven'
        name = project.getProperty('grublish.artifact')
        if (project.hasProperty('grublish.org')) {
            userOrg = project.getProperty('grublish.org')
        }
        if (project.hasProperty('grublish.vcs')) {
            vcsUrl = project.getProperty('grublish.vcs')
        }
        if (project.hasProperty('grublish.license')) {
            licenses = [project.getProperty('grublish.license')]
        }
    }
}
